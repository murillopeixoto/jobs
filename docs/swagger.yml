swagger: "2.0"
info:
  description: "jobs api"
  version: "1.0.0"
  title: "My Hammer challenge"
  contact:
    email: "murillompeixoto@gmail.com"
paths:
  /service:
    post:
      tags:
      - "service"
      summary: "Add a new service"
      operationId: "postService"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Service object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        400:
          description: "Invalid input"
        201:
          description: "Service Created"
    get:
      tags:
      - service
      summary: "Get all services"
      operationId: "getAllServices"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
  /service/{id}:
    get:
      tags:
      - "service"
      summary: "Find service by ID"
      description: "Returns a single service"
      operationId: "getServiceById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of service to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Service"
        404:
          description: "Service not found"
  /zipcode:
    post:
      tags:
      - "zipcode"
      summary: "Add a new zipcode"
      operationId: "postZipcode"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Zipcode object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Zipcode"
      responses:
        400:
          description: "Invalid input"
        201:
          description: "Zipcode Created"
    get:
      tags:
      - zipcode
      summary: "Get all zipcodes"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
  /zipcode/{id}:
    get:
      tags:
      - "zipcode"
      summary: "Find zipcode by ID"
      description: "Returns a single zipcode"
      operationId: "getZipcodeById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Zipcode"
        404:
          description: "Zipcode not found"
  /job:
    post:
      tags:
      - "job"
      summary: "Add a new job"
      operationId: "postJob"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Job object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Job"
      responses:
        400:
          description: "Invalid input"
        201:
          description: "Job Created"
    get:
      tags:
      - job
      summary: "Get all jobs"
      operationId: "getAllJobs"
      produces:
      - "application/json"
      responses:
        200:
          description: "Ok"
  /job/{id}:
    get:
      tags:
      - "job"
      summary: "Find job by ID"
      description: "Returns a single zipcode"
      operationId: "getJobById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Zipcode"
        404:
          description: "Zipcode not found"
    put:
      tags:
      - "job"
      summary: "Find job by ID"
      description: "Returns a single zipcode"
      operationId: "updateJob"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Job"
        404:
          description: "Zipcode not found"
definitions:
  Service:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Zipcode:
    type: "object"
    required:
    - "id"
    - "city"
    properties:
      id:
        type: "string"
      city:
        type: "string"
  Job:
    type: "object"
    required:
    - "serviceId"
    - "zipcodeId"
    - "title"
    - "dateToBeDone"
    properties:
      serviceId:
        type: "integer"
      zipcodeId:
        type: "string"
      title:
        type: "string"
      description:
        type: "string"
      dateToBeDone:
        type: "string"
